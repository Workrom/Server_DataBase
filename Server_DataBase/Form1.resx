<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Server_SearchPanel.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button_Gif.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>